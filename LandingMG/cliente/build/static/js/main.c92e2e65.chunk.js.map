{"version":3,"sources":["Home_Land/Landing.jsx","actions/index.js","components/Button/Reset.jsx","components/searchBar/SearchBar.jsx","components/navbar/Navbar.jsx","components/country/Country.jsx","components/paged/Paged.jsx","components/countryDetal/countryDetal.jsx","components/addActivity/AddActivity.jsx","components/ValidationInput.jsx","components/filter/AlphaSortFilter.jsx","components/filter/population.jsx","components/filter/Continent.jsx","components/filter/FilterActivity.jsx","components/Button/Button.jsx","components/countries/Countries.jsx","Home_Land/Home.jsx","App.js","reportWebVitals.js","reducer/index.js","store/index.js","index.js"],"names":["Landing","className","styles","land","conta","to","btn","GET_COUNTRY","GET_ACTIVITIES","SEARCH_BY_NAME","GET_COUNTRY_DETAL","FILTER_BY_CONTINENT","FILTER_BY_ACTIVITY","SORT","PAGED","getCountries","dispatch","a","axios","get","getCountry","type","payload","data","Sort","setCurrentPage","Reset","useDispatch","onClick","e","SearchBar","useState","input","setInput","searchForm","onSubmit","evento","name","preventDefault","then","info","catch","error","console","log","placeholder","autoComplete","onChange","target","value","src","alt","NavBar","container","activity","Country","flag","continent","population","numberWithCommas","Number","Paged","countriesAll","countriesPerPage","paginate","currentPage","pageNum","totalPage","Math","ceil","i","push","navigate","map","Num","btnselec","length","CountryDetal","props","id","match","params","countryDetal","useSelector","state","useEffect","resul","getCountryDetal","section","capital","subregion","area","activities","charAt","toUpperCase","slice","toLowerCase","difficulty","duration","season","s","btns","Button","st","AddActivity","countries","setError","handleChange","test","ValidationInput","form","formGroup","danger","el","country","join","post","alert","postActivity","disabled","AlphaSortFilter","PopulationSort","FilterByContinent","arrayCont","cont","uniqueContinent","Set","index","Activity","arrayAct","act","Countries","filterCountries","lastIndex","firstIndex","currentCountries","link","pagination","allCountries","numPag","Home","navbar","filters","App","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","rootReducer","action","filter","includes","sort","b","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c92e2e65.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styles from \"./Landing.module.css\";\r\n\r\nexport default function Landing() {\r\n  return (\r\n    <div className={styles.land}>\r\n      <div className={styles.conta}>\r\n        <h1>Welcome To Countries</h1>\r\n        <Link to=\"/home\">\r\n          <button className={styles.btn}>Ingresar </button>\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n}","import axios from 'axios';\r\n\r\nexport const GET_COUNTRY = \"GET_COUNTRIES\";\r\nexport const GET_ACTIVITIES = \"GET_ACTIVITIES\";\r\nexport const SEARCH_BY_NAME = \"SEARCH_BY_NAME\";\r\nexport const GET_COUNTRY_DETAL = \"GET_COUNTRY_DETAIL\";\r\nexport const FILTER_BY_CONTINENT = \"FILTER_BY_CONTINENT\";\r\nexport const FILTER_BY_ACTIVITY = \"FILTER_BY_ACTIVITY\";\r\nexport const SORT = \"SORT\";\r\nexport const PAGED = \"PAGINATE\";\r\n\r\nexport function getCountries() {\r\n  return async function (dispatch) {\r\n    let getCountry = await axios.get('http://localhost:3001/countries')\r\n    return dispatch({\r\n      type: GET_COUNTRY,\r\n      payload: getCountry.data\r\n    })\r\n  }\r\n};\r\n\r\nexport function postActivity(input) { //funcion que activa la ruta post \r\n  return async function () { //en (..../activity) para crear actividad\r\n    try {\r\n      let resul = await axios.post(\"http://localhost:3001/activity\", input);\r\n      if (resul) alert(resul.data);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n};\r\nexport function getActivities() {\r\n  return async function (dispatch) {\r\n    try {\r\n      let resul = await axios.get(`http://localhost:3001/activity`);\r\n      return dispatch({\r\n        type: GET_ACTIVITIES,\r\n        payload: resul.data,\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n}\r\n\r\nexport function searchByName(name) {\r\n  return function (dispatch) {\r\n    axios(`http://localhost:3001/countries?name=${name}`)\r\n      .then((info) => {\r\n        dispatch({\r\n          type: SEARCH_BY_NAME,\r\n          payload: info.data,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n}\r\n\r\nexport function getCountryDetal(id) {\r\n  return async function (dispatch) {\r\n    try {\r\n      let resul = await axios.get(`http://localhost:3001/countries/${id}`);\r\n      return dispatch({\r\n        type: GET_COUNTRY_DETAL,\r\n        payload: resul.data,\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n}\r\n\r\nexport function filterByContinent(payload) {\r\n  return {\r\n    type: FILTER_BY_CONTINENT,\r\n    payload,\r\n  };\r\n}\r\n\r\nexport function filterActivities(payload) {\r\n  return {\r\n    type: FILTER_BY_ACTIVITY,\r\n    payload,\r\n  };\r\n}\r\n\r\nexport function Sort(payload) {\r\n  return {\r\n    type: SORT,\r\n    payload,\r\n  };\r\n}\r\n\r\nexport function setCurrentPage(payload) {\r\n  return {\r\n    type: PAGED,\r\n    payload,\r\n  };\r\n}","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { getCountries } from '../../actions/index';\r\nimport styles from \"./ButtonHome.module.css\"\r\n\r\nexport default function Reset() {\r\n    \r\n    const dispatch=useDispatch()\r\n\r\n    const allCountries=(e)=>{\r\n        dispatch(getCountries())\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <button className={styles.btn} onClick={allCountries}>RESET</button>\r\n        </div>\r\n    )\r\n}","import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { searchByName, setCurrentPage } from \"../../actions\";\r\n//import logo from '../../img/search.svg';\r\nimport styles from \"./SearchBar.module.css\"\r\n\r\nexport default function SearchBar() {\r\n\r\n  const [input, setInput] = useState(\"\");\r\n\r\n  const dispatch=useDispatch();\r\n\r\n    const handleChange = (evento) => {\r\n    evento.preventDefault();\r\n    \r\n    setInput(evento.target.value);\r\n    \r\n  };\r\n  \r\n  const handleSubmit = (evento) => {\r\n    evento.preventDefault();\r\n    dispatch(searchByName(input))\r\n    setInput(\"\")\r\n    \r\n    dispatch(setCurrentPage(1))\r\n    \r\n  };\r\n  \r\n\r\n  return (\r\n    <div>\r\n      <form className={styles.searchForm} onSubmit={handleSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Search by name\"\r\n          autoComplete=\"off\"\r\n          onChange={handleChange}\r\n          value={input}\r\n        />\r\n        <button type=\"submit\"><img src alt=\"img no found\" /></button>\r\n      </form>\r\n    </div>\r\n  );\r\n}","import React from \"react\";\r\nimport SearchBar from \"../searchBar/SearchBar\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport styles from \"./NavBar.module.css\";\r\n\r\nexport default function NavBar() {\r\n  return (\r\n    <div className={styles.container}>\r\n      <h3>PI-Countries-Henry</h3>\r\n      <SearchBar />\r\n      <NavLink to=\"/activity\" className={styles.activity}>\r\n        Add Activity\r\n      </NavLink>\r\n    </div>\r\n  );\r\n}","import React from \"react\";\r\nimport { numberWithCommas } from '../utils'\r\nimport styles from \"./Country.module.css\"\r\n//pendiente revisar codigos\r\nexport default function Country({ name, flag, continent, population }) {\r\n    //pendiente revisar\r\n    return (\r\n        <div className={styles.container}>\r\n            <img src={flag} alt=\"img not found\" />\r\n            <h4>Name: {name}</h4>\r\n            <p>Continent: {continent}</p>\r\n            <p>Population: {numberWithCommas(Number(population))}</p>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport styles from \"./Page.module.css\";\r\n\r\nexport default function Paged({\r\n  countriesAll,\r\n  countriesPerPage,\r\n  paginate,\r\n  currentPage,\r\n}) {\r\n  const pageNum = [];\r\n\r\n  let totalPage = Math.ceil(countriesAll / countriesPerPage); //sacamos el total de paginas\r\n\r\n  for (let i = 1; i <= totalPage; i++) {\r\n    pageNum.push(i);            //Vamos guardando el numero de paginas maximo q se necesita para renderizar todos los paises\r\n  }\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      {pageNum && currentPage > 1 ? (\r\n        <button                              //boton para devolver\r\n          className={styles.navigate}\r\n          onClick={() => paginate(currentPage - 1)}\r\n        >\r\n          {\" \"}\r\n          back{\" \"}\r\n        </button>\r\n      ) : null}\r\n\r\n      {pageNum?.map((Num) => (\r\n        <button\r\n          className={currentPage === Num ? styles.btnselec : styles.btn}\r\n          key={Num}\r\n          onClick={() => paginate(Num)}\r\n        >\r\n          {Num}\r\n        </button>\r\n      ))}\r\n\r\n      {pageNum && currentPage <= pageNum.length - 1 ? (\r\n        <button\r\n          className={styles.navigate}\r\n          onClick={() => paginate(currentPage + 1)}\r\n        >\r\n          {\" \"}\r\n          Next{\" \"}\r\n        </button>\r\n      ) : null}\r\n    </div>\r\n  );\r\n}","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getCountryDetal } from \"./../../actions/index\";\r\nimport { Button } from \"..\";\r\nimport { numberWithCommas } from \"../utils\";\r\nimport styles from \"./CountryDetal.module.css\";\r\nimport s from \"../addActivity/AddActivity.module.css\";\r\nimport st from \"../Button/ButtonHome.module.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nexport default function CountryDetal(props) {\r\n\r\n  const id = props.match.params.id;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const countryDetal = useSelector((state) => state.countryDetal);\r\n\r\n  useEffect(() => { //el hook reemplaza las funciones de componentDidMount, componentDidUpdate, y componentWillUnmount en los componentes de clase.\r\n\r\n    dispatch(getCountryDetal(id));// se monta el componente osea q se ejecuta getcountridetal q hace llamado a la api \r\n  }, [dispatch, id]);             //para traer los datos detallados del pais\r\n\r\n  return (\r\n    <div className={styles.container}>        {/* renderizado informacion del pais */}\r\n      <div className={styles.section}>\r\n        <h3>Detailed Country Information</h3>\r\n        <img src={countryDetal.flag} alt=\"img not found\" />\r\n        <div></div>\r\n        <p>Name: {countryDetal.name}</p>\r\n        <p>Continent: {countryDetal.continent}</p>\r\n        <p>Code: {countryDetal.id}</p>\r\n        <p>Capital: {countryDetal.capital}</p>\r\n        <p>Subregion: {countryDetal.subregion}</p>\r\n        <p>\r\n          Area: {numberWithCommas(Number(countryDetal.area))} Km<sup>2</sup>\r\n        </p>\r\n        <p>Population: {numberWithCommas(Number(countryDetal.population))}</p>\r\n       \r\n\r\n        <div>\r\n          <h3>Activity Information</h3> {/* renderizado de actividad */}\r\n          {countryDetal.activities?.length ? countryDetal.activities.map((activity) => (\r\n            <div>\r\n              <h4> {/* para poner la primera letra mayus y las otras minusc */}\r\n                {\" \"}\r\n                {activity.name.charAt(0).toUpperCase() +  \r\n                  activity.name.slice(1).toLowerCase()}\r\n              </h4>\r\n              <p>Difficulty: {activity.difficulty}</p>\r\n              <p>Duration: {activity.duration} minutes</p>\r\n              <p>Season: {activity.season}</p>\r\n            </div>\r\n          )) : \r\n           <p>without tourist activities</p>}\r\n        </div>\r\n\r\n        <div className={s.btns}>\r\n          <Button />\r\n          <NavLink to=\"/activity\" className={st.btn}>\r\n            Add Activity\r\n          </NavLink>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}","import React, { useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { postActivity } from \"../../actions\";\r\nimport { Button, ValidationInput } from \"../index\";\r\nimport styles from \"./AddActivity.module.css\";\r\nimport s from \"../Button/ButtonHome.module.css\";\r\n\r\nexport default function AddActivity() {\r\n  const countries = useSelector((state) => state.countries); //me traigo el state del store (esta F. reemplaza mapStateToProps en Comp. Class)\r\n\r\n  const dispatch = useDispatch();    //reemplaza (mapDispatchToProps)en comp. class,      \r\n\r\n  const [input, setInput] = useState({ //estado interno del componente\r\n    name: \"\",\r\n    difficulty: \"\",\r\n    duration: \"\",\r\n    season: \"\",\r\n    countries: [],\r\n  });\r\n\r\n  const [error, setError] = useState(\"\"); \r\n\r\n  const handleChange = (evento) => {    \r\n    setError(\r\n      ValidationInput({\r\n        ...input,\r\n        [evento.target.name]: evento.target.value,\r\n      })\r\n    );\r\n\r\n    if (evento.target.name === \"countries\") {\r\n      \r\n      setInput({\r\n        ...input,\r\n        [evento.target.name]: [...input.countries, evento.target.value], //si el event es countries me traigo estado countries\r\n      });\r\n    } else {\r\n      setInput({\r\n        ...input,\r\n        [evento.target.name]: evento.target.value,\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleclick = (e) => {\r\n    e.preventDefault();\r\n    dispatch(postActivity(input));\r\n    setInput({\r\n      name: \"\",\r\n      difficulty: \"\",\r\n      duration: \"\",\r\n      season: \"\",\r\n      countries: [],\r\n    })\r\n  };\r\n\r\n \r\n  return (\r\n    <div className={styles.container}>\r\n      <form className={styles.form}>\r\n        <fieldset>\r\n          <legend>Register Tourist Activity</legend>\r\n          <div className={styles.formGroup}>\r\n            <label>Name </label>\r\n            <input\r\n              name=\"name\"\r\n              type=\"text\"\r\n              value={input.name}\r\n              autoComplete=\"off\"\r\n              placeholder=\"Enter Activity\"\r\n              onChange={handleChange}\r\n              className={error.name && styles.danger}\r\n            />\r\n            {error.name ? <p className={styles.danger}>{error.name}</p> : \"\"}\r\n          </div>\r\n          <div className={styles.formGroup}>\r\n            <label>Difficulty (escriba de 1 a 5) </label>\r\n            <select\r\n              className={error.difficulty && styles.danger}\r\n              onChange={handleChange}\r\n              name=\"difficulty\"\r\n            >\r\n              {[\"Seleccionar\", 1, 2, 3, 4, 5].map((el) => (\r\n                <option key={el} value={el}>\r\n                  {el}\r\n                </option>\r\n              ))}\r\n            </select>\r\n            {error.difficulty && (\r\n              <p className={styles.danger}>{error.difficulty}</p>\r\n            )}\r\n          </div>\r\n          <div className={styles.formGroup}>\r\n            <label>Duration (minutes) </label>\r\n            <input\r\n              name=\"duration\"\r\n              value={input.duration}\r\n              onChange={handleChange}\r\n              className={error.duration && styles.danger}\r\n            />\r\n            {error.duration && (\r\n              <p className={styles.danger}>{error.duration}</p>\r\n            )}\r\n          </div>\r\n          <div className={styles.formGroup}>\r\n            <label>Season: </label>\r\n            <select\r\n              className={error.season && styles.danger}\r\n              onChange={handleChange}\r\n              name=\"season\"\r\n            >\r\n              {[\"Seleccionar\", \"Summer\", \"Autumn\", \"Winter\", \"Spring\"].map(\r\n                (el) => (\r\n                  <option key={el} value={el}>\r\n                    {el}\r\n                  </option>\r\n                )\r\n              )}\r\n            </select>\r\n            {error.season && <p className={styles.danger}>{error.season}</p>}\r\n          </div>\r\n\r\n          <div className={styles.formGroup}>\r\n            <label>select countries: </label>\r\n            <div>\r\n              <select\r\n                className={error.countries && styles.danger}\r\n                name=\"countries\"\r\n                onChange={handleChange}\r\n              >\r\n                <option name=\"Seleccionar\">Seleccionar</option>\r\n                {countries.map((country) => (\r\n                  <option\r\n                    key={country.id}\r\n                    name={country.name}\r\n                    value={country.id}\r\n                  >\r\n                    {country.name}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n             \r\n              <div>{input.countries.join(\" \")}</div>\r\n              {error.countries && (\r\n                <p className={styles.danger}>{error.countries}</p>\r\n              )}\r\n            </div>\r\n          </div>\r\n          \r\n          <div className={styles.btns}>\r\n            <Button/>\r\n            <button\r\n              className={s.btn}\r\n              onClick={handleclick}\r\n              disabled={\r\n                !input.name ||\r\n                error.difficulty ||\r\n                error.season ||\r\n                error.countries\r\n              }\r\n            >\r\n              Insert Activity\r\n            </button>\r\n          </div>\r\n        </fieldset>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\n","export function ValidationInput(input) {\r\n  \r\n    let error = {};\r\nswitch (input) {\r\n    case !input.name:\r\n        return error.name = \"Name is requerid\";\r\n\r\n    case /\\d/.test(input.name):\r\n        return error.name = \"Numbers are not allowed\";\r\n\r\n    case input.name.length<3:\r\n        return error.name = \"Activity name must have at least 3 characters\";\r\n\r\n    case !input.difficulty:\r\n        return error.difficulty = \"Select at least one difficulty\";\r\n\r\n    case !input.duration:\r\n        return error.duration = \"Indicate duration of the activity\";\r\n\r\n\r\n    case !input.season:\r\n        return error.season=\"Select at least one season\"\r\n    \r\n    case input.countries.length<=0:\r\n        return error.countries=\"Select at least one country\"\r\n\r\n    default:\r\n        return error;\r\n}\r\n};","import React from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport { Sort } from '../../actions';\r\nimport styles from \"./filter.module.css\"\r\n\r\nexport default function AlphaSortFilter() {\r\n    const dispatch=useDispatch();\r\n    \r\n    const handleChange=evento=>{\r\n       evento.preventDefault();\r\n       dispatch(Sort(evento.target.value))//cuando el usuario selecciona Ascendente el evento.target.value=\"ASC\"\r\n\r\n    }\r\n    return (\r\n        <div className={styles.container}>\r\n            <h5>alphabetical order</h5>\r\n            <select onChange={handleChange}>\r\n                <option>to select</option> \r\n                <option value=\"ASC\">sort from a to z</option> \r\n                <option value=\"DESC\">sort from z to a</option>\r\n            </select>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Sort } from \"../../actions\";\r\nimport styles from \"./filter.module.css\"\r\n\r\nexport default function PopulationSort() {\r\n  const dispatch = useDispatch();\r\n\r\n\r\n  const handleChange = (evento) => {\r\n    evento.preventDefault();\r\n    dispatch(Sort(evento.target.value));\r\n    \r\n  };\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <h5>Sort By Population</h5>\r\n      <select  onChange={handleChange}>\r\n        <option name=\"Seleccionar\">To Select</option>\r\n        <option name=\"Population Asc.\" value=\"Population Asc.\">\r\n          Population Asc.\r\n        </option>\r\n        <option name=\"Population Desc.\" value=\"Population Desc.\">\r\n          Population Desc.\r\n        </option>\r\n      </select>\r\n    </div>\r\n  );\r\n}","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { filterByContinent, setCurrentPage } from \"../../actions\";\r\nimport styles from \"./filter.module.css\"\r\n\r\nexport default function FilterByContinent() {\r\n  \r\n  const dispatch = useDispatch();\r\n  \r\n  const countries = useSelector((state) => state.countries);\r\n\r\n  let arrayCont = countries?.map((cont) => cont.continent); //obtengo un array con todos los continentes\r\n  let uniqueContinent = [...new Set(arrayCont)]; //guardamos el valor unico\r\n  \r\n   \r\n  const handleChange = (evento) => {\r\n    dispatch(filterByContinent(evento.target.value));\r\n    dispatch(setCurrentPage(1))\r\n  };\r\n \r\n  return (\r\n    <div className={styles.container}>\r\n      \r\n      <h5>Filter by Continent</h5>\r\n\r\n      <select onChange={handleChange}>\r\n\r\n        <option value=\"All\">All</option>\r\n        {uniqueContinent?.map((el, index) => ( //si hay algo en el array de continentes lo mapeo \r\n          <option value={el} key={index}>\r\n            {el}\r\n          </option>\r\n        ))}\r\n\r\n      </select>\r\n    </div>\r\n  );\r\n\r\n}","import React, { useEffect }  from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getActivities, setCurrentPage} from \"../../actions\";\r\nimport { filterActivities } from \"../../actions\";\r\nimport styles from \"./filter.module.css\"\r\n\r\nexport default function Activity() {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getActivities())\r\n  }, [dispatch]);\r\n\r\n  const activities = useSelector((state) => state.activities);//me traigo el estado de redux con todas las actividades que se van agregando\r\n  let arrayAct = activities?.map((act) => act.name);\r\n\r\n  const handleChange = (e) => {\r\n    dispatch(filterActivities(e.target.value));\r\n    dispatch(setCurrentPage(1))\r\n  };\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <h5>Filter by Activity</h5>\r\n      <select onChange={handleChange}>\r\n        <option>to select</option>\r\n        {arrayAct?.map((act) => (     \r\n          <option key={act} value={act}>\r\n            {act.charAt(0).toUpperCase()+ act.slice(1).toLowerCase()}\r\n          </option>\r\n        ))}\r\n      </select>\r\n    </div>\r\n  );\r\n}","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport styles from \"./ButtonHome.module.css\"\r\n\r\n\r\nexport default function Button() {\r\n  return (\r\n    <div>\r\n      <NavLink to=\"/Home\">\r\n        <button className={styles.btn}>back home</button>\r\n      </NavLink>\r\n    </div>\r\n  );\r\n}","import React, { useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport Country from \"../country/Country\";\r\n\r\nimport { getCountries, setCurrentPage } from \"../../actions/index\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { Paged } from \"../index\";\r\nimport styles from \"../countries/Countries.module.css\";\r\n\r\nexport default function Countries() {\r\n  const dispatch = useDispatch();\r\n\r\n  const { currentPage, filterCountries } = useSelector((state) => state);\r\n\r\n  useEffect(() => {\r\n    dispatch(getCountries());\r\n  }, [dispatch]);\r\n\r\n  // 1) Defino la cantidad de CARD COUNTRY que quiero por página\r\n  const countryInPage = 9;\r\n\r\n  //2) Indice del ultimo pais\r\n  const lastIndex = currentPage * countryInPage; //9\r\n\r\n  //3)Indice del primer pais\r\n  const firstIndex = lastIndex- countryInPage; //0\r\n\r\n  //Paises que se van a ver por pagina,\r\n  //esto me devuelve un arreglo =[p1,p2,p3...,p9]\r\n  const currentCountries = filterCountries?.slice(\r\n    firstIndex, //0\r\n    lastIndex //9\r\n  );\r\n\r\n  //esta constante me ayuda para el renderizado\r\n  const paginate = (numPag) => {\r\n    dispatch(setCurrentPage(numPag));\r\n  };\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      {currentCountries.length ? (\r\n        <div className={styles.countries}>\r\n          {currentCountries.map((country) => {\r\n            return (\r\n              <div key={country.id}>\r\n                <NavLink to={\"/home/\" + country.id} className={styles.link}>\r\n                  <Country\r\n                    name={country.name}\r\n                    flag={country.flag}\r\n                    continent={country.continent}            \r\n                    population={country.population}\r\n                  />\r\n                </NavLink>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      ) : (\r\n        <div className={styles.error}>Country Not Found, Try Another Name!</div>\r\n      )}\r\n\r\n      <div className={styles.pagination}>\r\n        <Paged\r\n          allCountries={filterCountries.length}\r\n          countriesPerPage={countryInPage}\r\n          paginate={paginate}\r\n          currentPage={currentPage}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}","import React from \"react\";\r\nimport Reset from \"../components/Button/Reset\";\r\nimport NavBar from \"../components/navbar/Navbar\";\r\nimport Countries from \"../components/countries/Countries\";\r\nimport Continent from \"../components/filter/Continent\";\r\nimport AlphaSortFilter from \"../components/filter/AlphaSortFilter\";\r\nimport Population from \"../components/filter/population\";\r\nimport FilterActivity from \"../components/filter/FilterActivity\";\r\nimport styles from \"./Home.module.css\";\r\n\r\nexport default function Home() {\r\n  return (\r\n    <div className={styles.container}>\r\n      <nav className={styles.navbar} >\r\n        <NavBar />\r\n      </nav>\r\n      <section className={styles.filters}>\r\n        <AlphaSortFilter/>\r\n        <Population/>\r\n        <Continent/>\r\n        <FilterActivity/>\r\n        <Reset/>\r\n      </section>\r\n      <section className={styles.countries}>\r\n        <Countries />\r\n        \r\n      </section>\r\n    </div>\r\n  );\r\n}","//import styles from \"./App.module.css\";\nimport './App.css';\nimport Landing from './Home_Land/Landing';\nimport Home from './Home_Land/Home';\nimport {BrowserRouter, Route, Routes} from 'react-router-dom';\nimport { CountryDetal, AddActivity } from \"./components/index\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n    <BrowserRouter> \n    <Routes>\n    <Route exact path=\"/Home\" component={Home} />\n    <Route exact path=\"/\" component={Landing} />\n    <Route exact path=\"/Home/:id\" component={CountryDetal} />\n    <Route exact path=\"/activity\" component={AddActivity} />\n    </Routes>\n    </BrowserRouter>\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {\r\nGET_COUNTRY,\r\nGET_ACTIVITIES,\r\nSEARCH_BY_NAME,\r\nGET_COUNTRY_DETAL,\r\nFILTER_BY_CONTINENT,\r\nFILTER_BY_ACTIVITY,\r\nSORT,\r\nPAGED,\r\n\r\n  } from \"../actions/index\";\r\n\r\nconst initialState = {\r\ncountries: [],\r\nfilterCountries: [],\r\ncountryDetal: [],\r\nactivities:[],\r\ncurrentPage:Number(\"1\"),\r\n}\r\n\r\nfunction rootReducer (state = initialState, action){\r\nswitch (action.payload) {\r\n    case GET_COUNTRY:\r\n        return {\r\n            ...state, \r\n            countries : action.payload, //se guarda en el estado countries q es un array\r\n            filterCountries: action.payload,\r\n        }\r\n        case SEARCH_BY_NAME:\r\n            return {\r\n              ...state,\r\n              filterCountries: action.payload, \r\n            };\r\n          case GET_COUNTRY_DETAL:\r\n            return {\r\n              ...state,\r\n              countryDetal: action.payload,\r\n            };\r\n          case FILTER_BY_CONTINENT:\r\n            if (action.payload === \"All\") { //si son todos se guarda en el estado\r\n              return {\r\n                ...state,\r\n                filterCountries: state.countries,\r\n              };\r\n            } else {                      //si no son todos se busca dentro del estado de todos los paises\r\n              return {                    // y se filtra unicamente el que incluya el continente q se pasa en la action \r\n                ...state,\r\n                filterCountries:state.countries.filter(el=>action.payload.includes(el.continent))\r\n                \r\n              };\r\n            }\r\n            case PAGED:\r\n              return{\r\n                ...state,\r\n                currentPage:action.payload\r\n              }\r\n            case GET_ACTIVITIES:\r\n               return {\r\n                ...state,\r\n                activities:action.payload\r\n              };\r\n              case FILTER_BY_ACTIVITY:\r\n                \r\n                return{ // en el stado de todos los paises  \r\n                  ...state, //y se mapea el de las actividades para sacar los que incluyan en el nombre la action\r\n                  filterCountries:state.countries.filter(el => el.activities.map(e=>e.name).includes(action.payload))\r\n                } \r\n      \r\n          case SORT: //para ordenar se mira si se busca el orden ascendente o descendente\r\n            if (action.payload === \"Population Asc.\") {\r\n              return {\r\n                ...state,\r\n                filterCountries: state.filterCountries.sort(\r\n                  (a, b) => a.population - b.population\r\n                ), \r\n              };\r\n            }\r\n            if (action.payload === \"Population Desc.\") {\r\n              return {\r\n                ...state,\r\n                filterCountries: state.filterCountries.sort(\r\n                  (a, b) => b.population - a.population\r\n                ),\r\n              };\r\n            }\r\n            if (action.payload === \"ASC\") { \r\n              return {\r\n                ...state,\r\n                filterCountries: state.filterCountries.sort((a, b) => {\r\n                  if (a.name.toLowerCase() < b.name.toLowerCase()) {\r\n                    return -1;\r\n                  }\r\n                  if (a.name.toLowerCase() > b.name.toLowerCase()) {\r\n                    return 1;\r\n                  }\r\n                  return 0;\r\n                }),\r\n              };\r\n            }\r\n            if (action.payload === \"DESC\") {\r\n              return {\r\n                ...state,\r\n                filterCountries: state.filterCountries.sort((a, b) => {\r\n                  if (a.name.toLowerCase() > b.name.toLowerCase()) {\r\n                    \r\n                    return -1;\r\n                  }\r\n                  if (a.name.toLowerCase() < b.name.toLowerCase()) {\r\n                    \r\n                    return 1;\r\n                  }\r\n                  return 0;\r\n                }),\r\n              };\r\n            }\r\n            return {\r\n              ...state,\r\n            };\r\n\r\n\r\n\r\n    default:\r\n        return state;\r\n}\r\n\r\n};\r\n\r\nexport default rootReducer;","import { createStore, applyMiddleware } from 'redux';\r\nimport {composeWithDevTools} from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from '../reducer';\r\n\r\n\r\nexport const store = createStore (rootReducer, composeWithDevTools(applyMiddleware(thunk))) ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport { store } from './store/index'\n\nReactDOM.render(\n  <Provider store = {store}>\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}